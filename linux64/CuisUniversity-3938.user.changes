

----STARTUP---- (29 October 2019 15:00:40) as /home/drenteria/Documentos/isI/isw1/linux64/CuisUniversity-3938.image!


----End fileIn of /home/drenteria/Downloads/DesignPatterns-Proxy.st----!

----End fileIn of /home/drenteria/Downloads/TerniLapilli4.st----!

----SNAPSHOT----(29 October 2019 16:38:27) CuisUniversity-3938.image priorSource: 14319118!

----QUIT----(29 October 2019 16:38:34) CuisUniversity-3938.image priorSource: 14316496!

----STARTUP---- (31 October 2019 13:55:06) as /home/drenteria/Documentos/isI/isw1/linux64/CuisUniversity-3938.image!


TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: #TusLibros stamp: 'dr 10/31/2019 13:56:43'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----SNAPSHOT----(31 October 2019 13:57:05) CuisUniversity-3938.image priorSource: 14316589!

----QUIT----(31 October 2019 13:57:08) CuisUniversity-3938.image priorSource: 14317133!

----STARTUP---- (31 October 2019 14:38:06) as /home/drenteria/Documentos/isI/isw1/linux64/CuisUniversity-3938.image!


!classDefinition: #Cart category: #TusLibros stamp: 'dr 10/31/2019 14:40:19'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'no messages' stamp: 'dr 10/31/2019 14:40:06'!
test01NewCartIsEmpty

	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 14:40:22'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:40:33'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:40:40' prior: 50779085!
isEmpty
	
	^ true.! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 14:40:44'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 14:40:44'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:43:10'!
test02CartWithProductIsNotEmpty

	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:43:28' prior: 50779098!
test02CartWithProductIsNotEmpty

	| cart |
	cart := Cart new.
	
	self deny: cart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:43:57' prior: 50779104!
test02CartWithProductIsNotEmpty

	| cart |
	cart := Cart new.
	cart add: #aBook.
	
	self deny: cart isEmpty.! !

!classDefinition: #Book category: #TusLibros stamp: 'dr 10/31/2019 14:45:12'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:45:20' prior: 50779110!
test02CartWithProductIsNotEmpty

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	cart add: aBook.
	
	self deny: cart isEmpty.! !

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 14:45:34'!
ERROR!

!classDefinition: #Cart category: #TusLibros stamp: 'dr 10/31/2019 14:47:23'!
Object subclass: #Cart
	instanceVariableNames: 'contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:47:21'!
add: aBook

	^ contents add: aBook.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:48:08'!
initialize

	contents := OrderedCollection new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:48:24' prior: 50779089!
isEmpty
	
	^contents isEmpty.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:48:28' prior: 50779148!
isEmpty
	
	^ contents isEmpty.! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 14:48:29'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 14:48:29'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:55:30'!
test03CartWithProductsContainsProducts
	
	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	cart add: aBook.
	
	self deny: cart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:56:09' prior: 50779162!
test03CartWithProductsContainsProducts
	
	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	cart add: aBook.
	
	self assert: (cart contains: aBook).! !

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 14:56:14'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:56:21'!
contains: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:56:49' prior: 50779181!
contains: aBook 
	
	^ true.! !

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 14:56:53'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 14:56:53'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 14:56:53'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 14:56:53'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:58:12'!
test04CartWithAProductDoesNotContainOtherProducts
	
	| cart aBook anotherBook |
	cart := Cart new.
	aBook := Book new.
	cart add: aBook.
	anotherBook := Book new.
	
	self assert: (cart contains: aBook).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:58:20' prior: 50779202!
test04CartWithAProductDoesNotContainOtherProducts
	
	| cart aBook anotherBook |
	cart := Cart new.
	aBook := Book new.
	cart add: aBook.
	anotherBook := Book new.
	
	self assert: (cart contains: anotherBook).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:58:27' prior: 50779212!
test04CartWithAProductDoesNotContainOtherProducts
	
	| cart aBook anotherBook |
	cart := Cart new.
	aBook := Book new.
	cart add: aBook.
	anotherBook := Book new.
	
	self deny: (cart contains: anotherBook).! !

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 14:58:29'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 14:58:51' prior: 50779186!
contains: aBook 
	
	^ contents includes: aBook .! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 14:58:53'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 14:58:53'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 14:58:53'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 14:58:53'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:02:44' prior: 50779123!
test02CartWithProductIsNotEmpty

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	cart add: 1 of: aBook .
	
	self deny: cart isEmpty.! !

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:02:48'!
ERROR!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:02:57'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:03:04'!
add: aSmallInteger of: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:04:22' prior: 50779265!
add: aQuantity of: aBook 
	
	contents add: #(aBook,aQuantity).
	! !

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:04:45'!
PASSED!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:05:56' prior: 50779143!
initialize

	contents := Dictionary new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:07:24' prior: 50779278!
initialize

	contents := Dictionary new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:07:54' prior: 50779270!
add: aQuantity of: aBook 
	
	contents add: (Association key: aBook value: aQuantity).
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:08:36' prior: 50779235!
contains: aBook 
	
	^ contents includesKey: aBook .! !

!methodRemoval: Cart #add: stamp: 'dr 10/31/2019 15:09:01'!
add: aBook

	^ contents add: aBook.!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:09:24' prior: 50779170!
test03CartWithProductsContainsProducts
	
	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	cart add: 1 of: aBook .
	
	self assert: (cart contains: aBook).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:09:31' prior: 50779222!
test04CartWithAProductDoesNotContainOtherProducts
	
	| cart aBook anotherBook |
	cart := Cart new.
	aBook := Book new.
	cart add: 1 of: aBook.
	anotherBook := Book new.
	
	self deny: (cart contains: anotherBook).! !

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:09:37'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:09:37'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:09:37'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:09:37'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:09:37'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:14:08'!
test05CannotAddNegativeAmountOfABookToCart

	| cart aBook anotherBook |
	cart := Cart new.
	aBook := Book new.
	cart add: 1 of: aBook.
	anotherBook := Book new.
	
	self deny: (cart contains: anotherBook).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:17:18' prior: 50779336!
test05CannotAddNegativeAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: -1 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNegativeAmountOfBooksMessageError.
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:18:43' prior: 50779346!
test05CannotAddNegativeAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: -1 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNegativeAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook )! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:18:57' prior: 50779357!
test05CannotAddNegativeAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: -1 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNegativeAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)! !

!testRun: #CartTest #test05CannotAddNegativeAmountOfABookToCart stamp: 'dr 10/31/2019 15:19:17'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:19:32'!
cannotAddNegativeAmountOfBooksMessageError
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:19:58' prior: 50779384!
cannotAddNegativeAmountOfBooksMessageError
	
	^ 'You cannot add negative amount of that book'! !

!testRun: #CartTest #test05CannotAddNegativeAmountOfABookToCart stamp: 'dr 10/31/2019 15:20:03'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:21:50'!
test05CannotAddNotPositiveAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: 0 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNegativeAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)! !

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:21:52'!
FAILURE!

!methodRemoval: CartTest #test05CannotAddNegativeAmountOfABookToCart stamp: 'dr 10/31/2019 15:22:01'!
test05CannotAddNegativeAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: -1 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNegativeAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)!
!Cart class methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:22:29'!
cannotAddNotPositiveAmountOfBooksMessageError
	
	^ 'You cannot add negative amount of that book'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:22:29' prior: 50779399!
test05CannotAddNotPositiveAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: 0 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNotPositiveAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)! !

!methodRemoval: Cart class #cannotAddNegativeAmountOfBooksMessageError stamp: 'dr 10/31/2019 15:22:29'!
cannotAddNegativeAmountOfBooksMessageError
	
	^ 'You cannot add negative amount of that book'!
!Cart class methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:22:50' prior: 50779425!
cannotAddNotPositiveAmountOfBooksMessageError
	
	^ 'You cannot add not positive amount of that book'! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:23:48' prior: 50779288!
add: aQuantity of: aBook 

	self assertIfNotPositive: aBook.	
	contents add: (Association key: aBook value: aQuantity).
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:23:57' prior: 50779457!
add: aQuantity of: aBook 

	self assertIfNotPositive: aQuantity.	
	contents add: (Association key: aBook value: aQuantity).
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:25:16'!
assertIfNotPositive: aQuantity.	
	
	aQuantity <= 0 ifTrue: [ self error: self class cannotAddNotPositiveAmountOfBooksMessageError. ].! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:25:22'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:25:22'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:25:22'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:25:22'!
PASSED!

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:25:22'!
PASSED!

!methodRemoval: CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:29:05'!
test05CannotAddNotPositiveAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: 0 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNotPositiveAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:29:40'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:30:06'!
test05CannotAddNotPositiveAmountOfABookToCart
	self fail."
	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: 0 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNotPositiveAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)"! !

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:30:08'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:30:17' prior: 50779509!
test05CannotAddNotPositiveAmountOfABookToCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: 0 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNotPositiveAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)! !

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:30:18'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:30:18'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:30:18'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:30:18'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:30:18'!
PASSED!

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:30:18'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:34:02'!
test06AmountOfAddedBookIsCorrect

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self should: [ cart add: 0 of: aBook. ]
		 raise: Error
		withMessageText: Cart cannotAddNotPositiveAmountOfBooksMessageError.
	
	self deny: (cart contains: aBook)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:35:23' prior: 50779556!
test06AmountOfAddedBookIsCorrect

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart amountOf: aBook)  equals: 0.! !

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:35:27'!
ERROR!

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:35:32'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:35:37'!
amountOf: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:36:26' prior: 50779581!
amountOf: aBook 
	
	^ contents at: aBook.! !

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:36:38'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:36:46' prior: 50779567!
test06AmountOfAddedBookIsCorrect

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart amountOf: aBook)  equals: 1.! !

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:36:47'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:36:47'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:36:47'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:36:47'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:36:47'!
PASSED!

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:36:47'!
PASSED!

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:36:47'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:37:06'!
test07AmountOfNotAddedBookIsZero

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart amountOf: aBook)  equals: 1.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:37:20' prior: 50779624!
test07AmountOfNotAddedBookIsZero

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	self assert: (cart amountOf: aBook)  equals: 0.! !

!testRun: #CartTest #test07AmountOfNotAddedBookIsZero stamp: 'dr 10/31/2019 15:37:21'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:37:59' prior: 50779586!
amountOf: aBook 
	
	^ contents at: aBook ifAbsent: [ ^ 0. ].! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:38:01'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:38:01'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:38:01'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:38:01'!
PASSED!

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:38:01'!
PASSED!

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:38:01'!
PASSED!

!testRun: #CartTest #test07AmountOfNotAddedBookIsZero stamp: 'dr 10/31/2019 15:38:01'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:39:13'!
test08AmountOfAnAddedBookIsIncreasedIfAddedAgain

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
		
	self assert: (cart amountOf: aBook)  equals: 0.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:39:48' prior: 50779671!
test08AmountOfAnAddedBookIsIncreasedIfAddedAgain

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	cart add: 1 of: aBook.
		
	self assert: (cart amountOf: aBook)  equals: 2.! !

!testRun: #CartTest #test08AmountOfAnAddedBookIsIncreasedIfAddedAgain stamp: 'dr 10/31/2019 15:41:02'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:44:09' prior: 50779464!
add: aQuantity of: aBook 

	| previousAmount |
	self assertIfNotPositive: aQuantity.	
	previousAmount := contents at: aBook ifAbsent: [ 0 ].
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:45:06' prior: 50779692!
add: aQuantity of: aBook 

	| previousAmount |
	self assertIfNotPositive: aQuantity.	
	previousAmount := contents at: aBook ifAbsent: [ 0 ].
	
	contents at: aBook put: previousAmount + aQuantity .! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test07AmountOfNotAddedBookIsZero stamp: 'dr 10/31/2019 15:45:07'!
PASSED!

!testRun: #CartTest #test08AmountOfAnAddedBookIsIncreasedIfAddedAgain stamp: 'dr 10/31/2019 15:45:07'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:49:27'!
test09EmptyCartHasEmptyListCart

	| cart |
	cart := Cart new.
	
	self assert: (cart listCart isEmpty).! !

!testRun: #CartTest #test09EmptyCartHasEmptyListCart stamp: 'dr 10/31/2019 15:49:34'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:49:39'!
listCart
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:50:00' prior: 50779743!
listCart
	
	^ contents.! !

!testRun: #CartTest #test09EmptyCartHasEmptyListCart stamp: 'dr 10/31/2019 15:50:08'!
PASSED!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:51:11' prior: 50779747!
listCart
	
	^ OrderedCollection new.! !

!testRun: #CartTest #test09EmptyCartHasEmptyListCart stamp: 'dr 10/31/2019 15:51:20'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:52:14'!
test10CartWithBooksHasBooksInListCart

	| cart aBook |
	cart := Cart new.
	aBook := Book new.
	
	Cart add: 1 of: aBook.
	
	self assert: (cart listCart isEmpty).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:52:23' prior: 50779761!
test10CartWithBooksHasBooksInListCart

	| cart aBook |
	
	cart := Cart new.
	aBook := Book new.
	
	Cart add: 1 of: aBook.
	
	self assert: (cart listCart isEmpty).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:53:09' prior: 50779770!
test10CartWithBooksHasBooksInListCart

	| cart aBook |
	
	cart := Cart new.
	aBook := Book new.
	
	Cart add: 1 of: aBook.
	
	self assert: (cart listCart includesKey: aBook).! !

!testRun: #CartTest #test10CartWithBooksHasBooksInListCart stamp: 'dr 10/31/2019 15:53:12'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:53:26' prior: 50779779!
test10CartWithBooksHasBooksInListCart

	| cart aBook |
	
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart listCart includesKey: aBook).! !

!testRun: #CartTest #test10CartWithBooksHasBooksInListCart stamp: 'dr 10/31/2019 15:53:27'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:53:43' prior: 50779754!
listCart
	
	^ contents.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:54:21'!
test10CartWithBooksHasBooksAndItsQuantityInListCart

	| cart aBook |
	
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart listCart includesKey: aBook).! !

!methodRemoval: CartTest #test10CartWithBooksHasBooksInListCart stamp: 'dr 10/31/2019 15:54:21'!
test10CartWithBooksHasBooksInListCart

	| cart aBook |
	
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart listCart includesKey: aBook).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'dr 10/31/2019 15:55:00' prior: 50779807!
test10CartWithBooksHasBooksAndItsQuantityInListCart

	| cart aBook |
	
	cart := Cart new.
	aBook := Book new.
	
	cart add: 1 of: aBook.
	
	self assert: (cart listCart includesKey: aBook).
	self assert: (cart listCart at: aBook) equals: 1.
	self assert: (cart listCart size) equals: 1.! !

!testRun: #CartTest #test10CartWithBooksHasBooksAndItsQuantityInListCart stamp: 'dr 10/31/2019 15:55:01'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'dr 10/31/2019 15:55:01'!
PASSED!

!testRun: #CartTest #test02CartWithProductIsNotEmpty stamp: 'dr 10/31/2019 15:55:01'!
PASSED!

!testRun: #CartTest #test03CartWithProductsContainsProducts stamp: 'dr 10/31/2019 15:55:01'!
PASSED!

!testRun: #CartTest #test04CartWithAProductDoesNotContainOtherProducts stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

!testRun: #CartTest #test05CannotAddNotPositiveAmountOfABookToCart stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

!testRun: #CartTest #test06AmountOfAddedBookIsCorrect stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

!testRun: #CartTest #test07AmountOfNotAddedBookIsZero stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

!testRun: #CartTest #test08AmountOfAnAddedBookIsIncreasedIfAddedAgain stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

!testRun: #CartTest #test09EmptyCartHasEmptyListCart stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

!testRun: #CartTest #test10CartWithBooksHasBooksAndItsQuantityInListCart stamp: 'dr 10/31/2019 15:55:02'!
PASSED!

----SNAPSHOT----(31 October 2019 16:16:29) CuisUniversity-3938.image priorSource: 14317226!

----QUIT----(31 October 2019 16:16:35) CuisUniversity-3938.image priorSource: 14343083!

----STARTUP---- (31 October 2019 19:04:48) as /home/drenteria/Documentos/isI/isw1/linux64/CuisUniversity-3938.image!


----End fileIn of /home/drenteria/Documentos/isI/isw1/21- MarsRover/MarsRover.st----!

----SNAPSHOT----(31 October 2019 20:52:21) CuisUniversity-3938.image priorSource: 14343176!

----QUIT----(31 October 2019 20:52:25) CuisUniversity-3938.image priorSource: 14356123!